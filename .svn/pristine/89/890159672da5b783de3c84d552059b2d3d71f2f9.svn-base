ETHEntityArray obstaculos;
uint numberOfObstaculos;
uint obstaculoSizeHorizontal;
bool pointComputed = false;

void drawObstaculos(){

	obstaculos.Clear();
	
	ETHEntity@ obstTop;
	AddEntity("obstTop.ent", vector3(screenSize.x, 0.0f, 0.0f), obstTop);
	
	ETHEntity@ obstDown;
	AddEntity("obstDown.ent", vector3(screenSize.x, 650.0f * GetScale(), 0.0f), obstDown);
	
	obstaculoSizeHorizontal = obstTop.GetSize().x;
	
	obstaculos.Insert(obstTop);
	obstaculos.Insert(obstDown);
	
	//print("\n----------> "+ screenSize.y +"\n");
	
}

void updateObstaculos(){
	float speed = 40.0f;
	float lastObstPos = -(obstaculoSizeHorizontal);
	vector3 position;

	for (uint i=0; i<obstaculos.Size(); i++){
		obstaculos[i].AddToPositionXY(vector2(-0.1f,0.0f)*speed);
		position = obstaculos[i].GetPosition();
		
		if(!pointComputed and (i % 2 == 0) and (position.x < (player.GetPosition().x - (player.GetSize().x * 2)))){
			PlaySample("soundfx/sfx_point.ogg");
			pointComputed = true;
		}
		
		if(position.x <= -(obstaculoSizeHorizontal)){
			obstaculos[i].SetPosition(vector3(screenSize.x,position.y,position.z));
			pointComputed = false;
		}
	}
	
}