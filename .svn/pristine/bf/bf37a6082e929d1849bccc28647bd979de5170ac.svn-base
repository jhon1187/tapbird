ETHEntityArray chaos;
uint numberOfchaos;
float chaoSizeX;

void drawChaoFirstTime(){
	chaos.Clear();
	
	ETHEntity@ chaoDown;
	AddEntity("chaoDown.ent", vector3(0.0f,0.0f,0.0f),chaoDown);
	
	float chaoDownYPosition = screenSize.y - chaoDown.GetSize().y;
	chaoDown.SetPosition(vector3(0.0f,chaoDownYPosition,0.0f));
	
	ETHEntity@ chaoTop;
	AddEntity("chaoTop.ent", vector3(0.0f,0.0f,0.0f),chaoTop);
	
	float chaoTopYPosition = chaoDownYPosition - chaoTop.GetSize().y;
	chaoTop.SetPosition(vector3(0.0f,chaoTopYPosition,0.0f));
	
	chaoSizeX = chaoTop.GetSize().x;
	
	numberOfchaos = 2;
	
	chaos.Insert(chaoDown);
	chaos.Insert(chaoTop);
	
	for(uint i = 1;i < numberOfchaos; i++){
		AddEntity("chaoDown.ent", vector3((chaoSizeX*(i)),chaoDownYPosition,0.0f),chaoDown);
		AddEntity("chaoTop.ent", vector3((chaoSizeX*(i)),chaoTopYPosition,0.0f),chaoTop);
		
		chaos.Insert(chaoDown);
		chaos.Insert(chaoTop);
	}
		
}

void updateChao(){
	float speed = 40.0f;
	int chaoFirst = 0;
	int chaoNext = 2;

	chaos[chaoFirst].AddToPositionXY(vector2(-0.1f, 0.0f)*speed);
	chaos[chaoFirst + 1].SetPosition(vector3(chaos[chaoFirst].GetPosition().x,chaos[chaoFirst + 1].GetPosition().y,chaos[chaoFirst + 1].GetPosition().z));
	
	chaos[chaoNext].SetPosition(vector3(chaos[chaoFirst].GetPosition().x + chaoSizeX,chaos[chaoNext].GetPosition().y,chaos[chaoNext].GetPosition().z));
	chaos[chaoNext + 1].SetPosition(vector3(chaos[chaoNext].GetPosition().x,chaos[chaoNext + 1].GetPosition().y,chaos[chaoNext + 1].GetPosition().z));
	
	if(chaos[chaoFirst].GetPosition().x <= -(chaoSizeX)){
		int chaoTemp = chaoFirst;
		
		chaos[chaoFirst].SetPosition(vector3(chaos[chaoNext].GetPosition().x,chaos[chaoFirst].GetPosition().y,chaos[chaoFirst].GetPosition().z));
		chaos[chaoFirst + 1].SetPosition(vector3(chaos[chaoFirst].GetPosition().x,chaos[chaoFirst + 1].GetPosition().y,chaos[chaoFirst + 1].GetPosition().z));
		
		chaoFirst = chaoNext;
		chaoNext = chaoTemp;
	}
		
}